# Runs Kubernetes version compatibility check
# Requires as input IMG ENV variable for make target
# Don't forget to use actions/checkout@v3 and actions/setup-go@v4 before

name: 'Kubernetes version compatibility check'
description: 'Runs Kubernetes version compatibility check'
inputs:
  makefile-img-env:
    description: 'ENV variable required for make target'
    required: true
runs:
  using: "composite"
  steps:
    - name: "Create Single Cluster"
      uses: AbsaOSS/k3d-action@4e8b3239042be1dc0aed6c5eb80c13b18200fc79 #v2.4.0
      with:
        cluster-name: "test-cluster-1"
        args: >-
          --agents 2
          --image docker.io/rancher/k3s:v1.27.3-k3s1
          --servers-memory=16g
          --port 80:80@loadbalancer
          --port 443:443@loadbalancer
          --k3s-arg "--disable=traefik@server:0"
    - name: Run integration tests
      run: |
        kubectl config use-context k3d-test-cluster-1
        EXPORT_RESULT=true IMG=${{ inputs.img-env }} make istio-integration-test
    - name: Check deprecations
      run: |
        set -eou pipefail
        GO111MODULE=on go install github.com/prometheus/prom2json/cmd/prom2json@v1.3.3
        kubectl get --context k3d-test-cluster-1 --raw /metrics | prom2json | jq '.[] | select(.name=="apiserver_requested_deprecated_apis").metrics[].labels' > deprecations.txt
    - uses: actions/upload-artifact@v3
      with:
        name: html-reports
        path: tests/integration/reports/
    - uses: actions/upload-artifact@v3
      with:
        name: deprecation-report
        path: deprecations.txt
    - run: if [[ $(wc -l deprecations.txt | awk '{print $1}' ) != '0' ]]; then exit 1; fi
      name: Check that deprecations are empty
