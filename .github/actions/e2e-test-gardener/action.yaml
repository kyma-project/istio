name: 'E2E tests (Gardener)'
description: 'Runs e2e tests on Gardener'
inputs:
  manager_image:
    description: "Manager image used for test"
    required: true
  gardener_secret:
    description: "Kubeconfig secret for Gardener"
    required: true
  gardener_provider:
    description: "Gardener provider to use"
    required: true
  gardener_project_name:
    required: true
    description: "Name of the gardener project"
  test_make_target:
    description: 'Make target for integration tests to run'
    required: true

runs:
  using: "composite"
  steps:
    - name: Generate cluster name
      shell: bash
      run: echo CLUSTER_NAME=istio-$(echo $RANDOM | md5sum | head -c 7) >> $GITHUB_ENV
    - uses: actions/setup-go@v5
      with:
        go-version-file: "go.mod"
    - name: Checkout to PR branch
      shell: bash
      if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
      run: |
        git fetch origin pull/${{ github.event.number }}/head:PR-${{ github.event.number }}
        git checkout PR-${{ github.event.number }}
    - name: Prepare gardener kubeconfig
      shell: bash
      env:
        GARDENER_TOKEN: ${{ inputs.gardener_secret }}
      run: "${{ github.workspace }}/hack/ci/scripts-v2/gardener_kubeconfig.sh"
    - name: Provision cluster
      shell: bash
      env:
        GARDENER_KUBECONFIG: "${{ github.workspace }}/gardener_kubeconfig.yaml"
        CLUSTER_KUBECONFIG: "${{ github.workspace }}/${{ env.CLUSTER_NAME }}_kubeconfig.yaml"
        GARDENER_PROVIDER: ${{ inputs.gardener_provider }}
        GARDENER_PROJECT_NAME: ${{ inputs.gardener_project_name }}
        PIPELINE_LINK: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}
      run: "${{ github.workspace }}/hack/ci/scripts-v2/provision-gardener.sh"
    - name: Run integration tests
      shell: bash
      env:
        IMG: ${{ inputs.manager_image }}
        CLUSTER_KUBECONFIG: "${{ github.workspace }}/${{ env.CLUSTER_NAME }}_kubeconfig.yaml"
      run: EXPORT_RESULT=true "${{ github.workspace }}/hack/ci/scripts-v2/integration-test-gardener.sh" ${{ inputs.test_make_target }}
    - name: Gather deployment logs
      shell: bash
      if: always()
      run: |
        mkdir logs
        export KUBECONFIG="${{ github.workspace }}/${{ env.CLUSTER_NAME }}_kubeconfig.yaml"
        (kubectl logs -n kyma-system deployments/istio-controller-manager || true) > logs/istio-controller-manager.log
    - name: Uploads logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: logs-${{ github.job }}-${{ inputs.test_make_target }}
        path: logs/
    - name: Uploads artifacts
      uses: actions/upload-artifact@v4
      with:
        name: html-reports_${{ github.job }}_${{ github.run_id }}_${{ inputs.test_make_target }}_${{ inputs.gardener_provider }}
        path: tests/integration/reports/
    - name: Deprovision cluster
      if: always()
      shell: bash
      env:
        GARDENER_KUBECONFIG: "${{ github.workspace }}/gardener_kubeconfig.yaml"
        GARDENER_PROJECT_NAME: ${{ inputs.gardener_project_name }}
      run: "${{ github.workspace }}/hack/ci/scripts-v2/deprovision-gardener.sh"
