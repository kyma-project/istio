# This workflow is responsible for performance, UI and compatibility tests

name: Schedule Daily

on:
  schedule:
    - cron: '0 5 * * *' # Run every day at 6:00 CET (5:00 UTC)

jobs:
  get-sha:
    name: Get manager SHA
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.get-sha.outputs.sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: get-sha
        uses: ./.github/actions/get-latest-sha

  #############################################
  # Performance tests
  # Run on: AWS
  #############################################

  istio-performance-test:
    name: Istio performance test
    runs-on: ubuntu-latest
    needs: [ get-sha ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/perf-test-gardener
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          manager_image: "europe-docker.pkg.dev/kyma-project/prod/istio/main/istio-manager:${{ needs.get-sha.outputs.sha }}"
          gardener_secret: ${{ secrets.GARDENER_TOKEN }}
          gardener_project_name: ${{ vars.GARDENER_PROJECT_NAME }}
          gardener_provider: aws

  #############################################
  # UI tests
  # Run on: K3D
  #############################################

  run-ui-tests-periodic:
    name: Run UI tests
    runs-on: ubuntu-latest
    needs: [ get-sha ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - name: Run tests
        run: |
          sudo echo "127.0.0.1 local.kyma.dev" | sudo tee -a /etc/hosts
          wget -q -O - https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | sudo bash
          docker pull europe-docker.pkg.dev/kyma-project/prod/istio/main/istio-manager:"${{ needs.get-sha.outputs.sha }}"
          IMG=europe-docker.pkg.dev/kyma-project/prod/istio/main/istio-manager:"${{ needs.get-sha.outputs.sha }}" ./tests/ui/scripts/k3d-ci-kyma-dashboard-integration.sh stage
      - uses: actions/upload-artifact@v4
        if: always()
        name: Export Cypress output
        with:
          name: cypress
          path: tests/ui/cypress/


  #############################################
  # Compatibility tests
  # Run on: AWS, K3D
  #############################################

  k8s-compatibility-check-k3d:
    name: Kubernetes version compatibility test - K3D
    runs-on: ubuntu-latest
    needs: [get-sha]
    strategy:
      fail-fast: false
      matrix:
        test_make_target: [ "configuration-integration-test", "mesh-communication-integration-test", "installation-integration-test", "observability-integration-test" ]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - uses: ./.github/actions/k8s-compatibility-test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          operator_image_name: "europe-docker.pkg.dev/kyma-project/prod/istio/main/istio-manager:${{needs.get-sha.outputs.sha }}"
          test_make_target: ${{ matrix.test_make_target }}

  k8s-compatibility-check-aws:
    name: Kubernetes version compatibility test - AWS
    runs-on: ubuntu-latest
    needs: [get-sha]
    strategy:
      fail-fast: false
      matrix:
        test_make_target: [ "configuration-integration-test", "mesh-communication-integration-test", "installation-integration-test", "observability-integration-test" ]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - uses: ./.github/actions/k8s-compatibility-test-aws
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          manager_image: "europe-docker.pkg.dev/kyma-project/prod/istio/main/istio-manager:${{ needs.get-sha.outputs.sha }}"
          test_make_target: ${{ matrix.test_make_target }}
          gardener_secret: ${{ secrets.GARDENER_TOKEN }}
          gardener_project_name: ${{ vars.GARDENER_PROJECT_NAME }}
          gardener_provider: aws

  slack_failed_notification:
    name: Slack Notification
    runs-on: ubuntu-latest
    if: ${{ failure() }}
    needs: [istio-performance-test, run-ui-tests-periodic, k8s-compatibility-check-k3d, k8s-compatibility-check-aws]
    steps:
      - uses: actions/checkout@v4
      - name: Notify
        uses: ./.github/actions/slack-notification-failed-workflow
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
