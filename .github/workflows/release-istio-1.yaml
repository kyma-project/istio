name: Release Istio - Step 1

permissions:
  contents: read
  
on:
  workflow_dispatch:
    inputs:
      name:
        description: "Release Tag"
        default: ""
        required: true

jobs:
  release-istio:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GOAT_BOT_REPO_ACCESS }}

      - name: Check if release branch exists
        run: |
          major_minor=$(echo "${{ github.event.inputs.name }}" | grep -Eo '^[0-9]+\.[0-9]+')
          branch_name="release-$major_minor"
          echo "branch_name=$branch_name" >> $GITHUB_ENV
          
          if git ls-remote --heads origin "$branch_name" | grep -q "$branch_name"; then
            echo "branch_exists=true" >> $GITHUB_ENV
          else
            echo "branch_exists=false" >> $GITHUB_ENV
          fi

      - name: Create a release branch
        if: env.branch_exists == 'false'
        run: |
            git checkout -b "$branch_name"
            git push origin "$branch_name"

      - name: Update sec-scanners-config
        env:
          GH_TOKEN: ${{ secrets.GOAT_BOT_REPO_ACCESS }}
          IMAGE_TAG: ${{ github.event.inputs.name }}
          REL_BRANCH: ${{ env.branch_name}}
          BRANCH_EXISTS: ${{ env.branch_exists }}
          NAME: ${{ vars.ACTIONS_BOT_NAME }}
          EMAIL: ${{ vars.ACTIONS_BOT_EMAIL }}
        run: |
          git config user.name "$NAME"
          git config user.email "$EMAIL"
          
          git fetch origin
          git checkout -f sec-scanners-config/release

          # Reset to current release branch
          if [ "$BRANCH_EXISTS" == "true" ]; then
            git reset --hard origin/$REL_BRANCH
          else
          # Reset to main for minor, major releases
            git reset --hard origin/main
          fi
          
          sed -i "s/\(releases\|main\)\/istio-manager.*/releases\/istio-manager\:$IMAGE_TAG/g" sec-scanners-config.yaml
          git add ./sec-scanners-config.yaml
          if git diff-index --quiet HEAD; then
            echo "Error: No changes detected"
            exit 1
          fi
          git commit -m "release: update sec-scanners-config.yaml" -m "Generated by GitHub Actions"
          git push -f -u origin sec-scanners-config/release
          gh pr create --base $REL_BRANCH --head sec-scanners-config/release --fill || true
