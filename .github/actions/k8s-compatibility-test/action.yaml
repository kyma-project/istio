name: 'Kubernetes version compatibility check'
description: 'Runs Kubernetes version compatibility check'
inputs:
  operator-image-name:
    description: 'Operator image used for test'
    required: true
  test_make_target:
    description: 'Make target for integration tests to run'
    default: 'istio-test-integration'
runs:
  using: "composite"
  steps:
    - uses: actions/setup-go@v5
      with:
        go-version-file: "go.mod"
    - name: Create Cluster
      uses: ./.github/actions/provision-k3d-cluster
      with:
        k3s-version: "1.30.3"
    - name: Run integration tests
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          k3d image import ${{ inputs.operator-image-name }}
        fi

        kubectl config use-context k3d-k3s-default
        EXPORT_RESULT=true IMG=${{ inputs.operator-image-name }} make ${{ inputs.test_make_target }}
      shell: bash
    - name: Check deprecations
      run: |
        set -eou pipefail
        GO111MODULE=on go install github.com/prometheus/prom2json/cmd/prom2json@v1.3.3
        kubectl get --context k3d-k3s-default --raw /metrics | prom2json | jq '.[] | select(.name=="apiserver_requested_deprecated_apis").metrics[].labels' > deprecations.txt
      shell: bash
    - uses: actions/upload-artifact@v4
      with:
        name: html-reports-${{ github.job }}-${{ inputs.test_make_target }}
        path: tests/integration/reports/
    - name: Check that deprecations are empty
      run: if [[ $(wc -l deprecations.txt | awk '{print $1}' ) != '0' ]]; then exit 1; fi
      shell: bash
    - uses: actions/upload-artifact@v4
      with:
        name: deprecation-report-${{ github.job }}-${{ inputs.test_make_target }}
        path: deprecations.txt
