name: Pull Request pipeline
on:
  pull_request:
    types: [ synchronize, opened, reopened, ready_for_review ]
    branches:
      - main
env:
  GITLEAKS_VERSION: 8.21.0
jobs:
  gitleaks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fetch gitleaks ${{ env.GITLEAKS_VERSION }}
        run: curl -Lso gitleaks.tar.gz https://github.com/gitleaks/gitleaks/releases/download/v${{ env.GITLEAKS_VERSION }}/gitleaks_${{ env.GITLEAKS_VERSION }}_linux_x64.tar.gz && tar -xvzf ./gitleaks.tar.gz
      - name: Run gitleaks
        # Scan commits between base and head of the pull request
        run: ./gitleaks detect --log-opts=${PULL_BASE_SHA}...${PULL_HEAD_SHA} --verbose --redact
        env:
          PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          PULL_HEAD_SHA: ${{ github.event.pull_request.head.sha }}

  build-image:
    name: Build manager image
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-manager-image
        with:
          operator-image-name: "istio-manager:PR-${{github.event.number}}"

  unit-tests:
    name: Dispatch unit test
    uses: ./.github/workflows/call-unit-lint.yaml
    if: github.event.pull_request.draft == false
    secrets: inherit

  integration-tests:
    name: Dispatch integration tests
    needs: [build-image]
    uses: ./.github/workflows/pull-integration.yaml
    if: github.event.pull_request.draft == false
    secrets: inherit

  ui-tests:
    name: Dispatch UI tests
    needs: [build-image]
    uses: ./.github/workflows/call-ui-tests.yaml
    if: github.event.pull_request.draft == false
    secrets: inherit

  verify-pins:
    name: Dispatch verify-commit-pins
    uses: ./.github/workflows/call-verify-commit-pins.yaml
    if: github.event.pull_request.draft == false
    secrets: inherit

  pull-request-status:
    needs: [ build-image, unit-tests, integration-tests, ui-tests, verify-pins ]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1